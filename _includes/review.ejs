---
layout: default.ejs
eleventyComputed: {
	title: "‘<%- name %>’ review by <%- users?.[username]?.name || username %> • Fruitboxd"
}
bodyClass: "review-page"
---
<%_
const doFallback = fallback.bind(null, arguments[0]);
name = doFallback("name", "");
username = doFallback("username", "");
rating = doFallback("rating", "");
date = formatDate(doFallback("date", ""));
fileSlug = arguments[0].page.fileSlug;

let rev = collections.all.filter(file => file.filePathStem.startsWith(`/fruit/${fileSlug}`));
if(rev.length <= 0) {
	console.log("OOPS");
	rev = null;
} else {
	rev = rev[0];
}
thumbnailCredits = rev.data?.thumbnailCredits || "";
%>

<main class="fruit-review">
	<aside>
		<figure class="fruit-image">
			<a href="/fruit/<%= fileSlug %>">
				<img alt="<%= name %>" src="/fruit/<%= fileSlug %>/thumbnail.jpg">
			</a>
			<figcaption>
				<%- thumbnailCredits %>
			</figcaption>
		</figure>
	</aside>
	<div class="review-header">
		<div class="review-header-top">
			<div class="reviewer">
				<img src="/assets/avatar/<%= username %>.jpg">
			</div>
			<p class="review-attribution">
				Avaliação por <strong><%=
					getAuthorFromUsername(arguments[0], username)
				%></strong>
			</p>
			<hr>
			<h2>
				<a href="/fruit/<%= fileSlug %>"><%= name %></a>
				<div class="review-rating">
					<%- makeStars(rating) %>
				</div>
			</h2>
		</div>
		<p class="review-date">Consumido em <%= date %></p>
	</div>
	<p class="review-text"><%- content.trim() %></p>
</main>
